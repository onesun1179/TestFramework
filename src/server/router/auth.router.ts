import express from "express";
import { GetTableData } from "@schema/Auth.schema";
import { convertDate } from "@common";

const router = express.Router();

router.post("/getTableData", (req) => {
	req.transaction<GetTableData>(async (_void, { Auth }) => {
		const columns = Object.entries(Auth.rawAttributes).map(
			([key, value], i) => {
				const filter = (() => {
					const type = value.type.toString({});
					if (type.includes("BIGINT") || type.includes("NUMBER")) {
						return "agNumberColumnFilter";
					} else if (type.includes("VARCHAR")) {
						return "agTextColumnFilter";
					} else if (type.includes("DATE")) {
						return "agDateColumnFilter";
					} else {
						return false;
					}
				})();

				return {
					headerName: value.comment || key,
					field: key,
					sortable: true,
					editable: !(value.autoIncrement || (value as any)._autoGenerated),
					// editable: true,
					filter: filter as any,
					// cellEditorSelector: filter ? { component: filter } : null,
				};
			},
		);
		const baseData = { _updated: false };
		const data = await Auth.getData();
		const _data = await data.map((o) =>
			Object.assign(
				o.toJSON(),
				o.createdAt ? { createdAt: convertDate(new Date(o.createdAt)) } : {},
				o.updatedAt ? { updatedAt: convertDate(new Date(o.updatedAt)) } : {},
				o.deletedAt ? { deletedAt: convertDate(new Date(o.deletedAt)) } : {},
			),
		);
		return { columns, data: _data };
	});
});

export default router;
